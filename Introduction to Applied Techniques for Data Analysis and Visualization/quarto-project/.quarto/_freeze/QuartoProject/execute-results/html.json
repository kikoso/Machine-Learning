{
  "hash": "a92bedd69d1042d97bab000cffa86497",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Uso de bicicletas públicas en NYC: Un análisis estacional\"\nauthor: \"Enrique López-Mañas\"\nformat: \n  html:\n    embed-resources: true\n    toc: true\n    toc-depth: 3\n    number-sections: true\n    code-fold: true\n    code-summary: \"Mostrar Código\"\neditor: visual\n---\n\n\n\n## Introduction\n\nThis case study aims to analyze the usage patterns of the public bike-sharing system in New York City, specifically the use of Citi Bike, throughout the year. Various factors that may influence user behavior will be explored, such as seasonality, weather conditions (like rain), and user type (frequent members vs. occasional users).\n\nThe analyses focus on the following aspects:\n\n- **Seasonality**: Variations in bike usage will be examined according to the seasons of the year (spring, summer, fall, and winter), evaluating factors such as trip duration and the number of users per season.\n\n- **Weather Conditions**: The impact of rain on bike usage will be analyzed. Usage patterns on rainy days will be compared to those on dry days, observing whether weather conditions affect the number of trips taken and their average duration.\n\n- **User Type**: Differences in user behavior will be studied according to user type (occasional vs. member), with the goal of identifying variations in usage frequency, trip duration, or peak activity hours between these groups.\n\n- **Impact of Holidays and Festivities**: The study will also investigate how holidays and festive days may influence Citi Bike usage by comparing activity on these days to that on regular working days.\n\nThrough these analyses, the aim is to identify relevant patterns that can help better understand user behavior and its relationship with seasonal and weather conditions, as well as usage differences based on demographic and special characteristics.\n\n### Dataset Used\n\nFor this study, the public dataset provided by **Citi Bike**, New York City's bike-sharing system, has been used. The data is available on Citi Bike’s official data portal and contains detailed information about each trip made using the service.\n\n### Data Source\n\nThe downloaded files correspond to trips made during the year starting in 2024. Each month is represented by a separate CSV file, with approximately 1 million records per month. The files were downloaded, stored in a local folder named `data/`, and then read and combined into a single data frame for analysis.\n\n### Variables Used\n\nThe original dataset contains the following variables:\n\n- `ride_id`: unique identifier of the ride.\n\n- `rideable_type`: type of bike used (classic, electric, or dockless).\n\n- `started_at`: date and time when the ride started.\n\n- `ended_at`: date and time when the ride ended.\n\n- `start_station_name`: name of the starting station.\n\n- `start_station_id`: identifier of the starting station.\n\n- `end_station_name`: name of the destination station.\n\n- `end_station_id`: identifier of the destination station.\n\n- `start_lat`, `start_lng`: geographic coordinates of the starting location.\n\n- `end_lat`, `end_lng`: geographic coordinates of the destination.\n\n- `member_casual`: user type (`member` for subscribed users or `casual` for occasional users).\n\n> Note: The data **does not include variables directly related to the user's gender or age**, so the analysis is limited to the user type (`member_casual`) as the only sociodemographic variable.\n\n### Normalization and Cleaning Process\n\nSince the monthly files were not entirely homogeneous (for example, some columns like `start_station_id` appeared as type `double` in some files and `character` in others), a **preliminary type normalization** was performed when reading the data. Station identifiers (`start_station_id` and `end_station_id`) were forced to `character` type to avoid type conflicts.\n\nAdditionally, new derived variables were created to facilitate temporal analysis:\n\n- `duration`: ride duration in minutes, calculated as the difference between `ended_at` and `started_at`.\n\n- `month`: month of the year extracted from the start date.\n\n- `day_of_week`: day of the week on which the ride took place.\n\n- `season`: season of the year, classified according to the month (`Winter`, `Spring`, `Summer`, `Fall`).\n\nRecords with negative durations or durations over 24 hours were also removed, as they were considered measurement errors or outliers.\n\n## Final Dataset Size\n\nAfter preprocessing and merging the files, the resulting dataset contains approximately **44 million records**, enabling a statistically representative and robust analysis of Citi Bike usage throughout the year 2024.\n\n### Column Compatibility Check\n\nBefore merging the CSV files, it is important to ensure that all files have the same columns. This guarantees that the data is combined correctly without errors related to incompatible columns.\n\n#### Listing the Columns of Each File\n\nThe process began by listing the headers of each CSV file to identify the columns present in each one. This was done using the `read_csv()` function with the argument `n_max = 0`, which allows reading only the headers without loading the full data.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\noptions(repos = c(CRAN = \"https://cloud.r-project.org\"))\ninstall.packages(\"purrr\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nInstalliere Paket nach 'C:/Users/User/AppData/Local/R/win-library/4.4'\n(da 'lib' nicht spezifiziert)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nPaket 'purrr' erfolgreich ausgepackt und MD5 Summen abgeglichen\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: kann alte Installation von Paket 'purrr' nicht entfernen\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in file.copy(savedcopy, lib, recursive = TRUE): Problem\nC:\\Users\\User\\AppData\\Local\\R\\win-library\\4.4\\00LOCK\\purrr\\libs\\x64\\purrr.dll\nnach C:\\Users\\User\\AppData\\Local\\R\\win-library\\4.4\\purrr\\libs\\x64\\purrr.dll zu\nkopieren: Permission denied\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: 'purrr' wiederhergestellt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nDie heruntergeladenen Binärpakete sind in \n\tC:\\Users\\User\\AppData\\Local\\Temp\\RtmpcfUAjP\\downloaded_packages\n```\n\n\n:::\n\n```{.r .cell-code}\ninstall.packages(\"readr\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nInstalliere Paket nach 'C:/Users/User/AppData/Local/R/win-library/4.4'\n(da 'lib' nicht spezifiziert)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nPaket 'readr' erfolgreich ausgepackt und MD5 Summen abgeglichen\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: kann alte Installation von Paket 'readr' nicht entfernen\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in file.copy(savedcopy, lib, recursive = TRUE): Problem\nC:\\Users\\User\\AppData\\Local\\R\\win-library\\4.4\\00LOCK\\readr\\libs\\x64\\readr.dll\nnach C:\\Users\\User\\AppData\\Local\\R\\win-library\\4.4\\readr\\libs\\x64\\readr.dll zu\nkopieren: Permission denied\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: 'readr' wiederhergestellt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nDie heruntergeladenen Binärpakete sind in \n\tC:\\Users\\User\\AppData\\Local\\Temp\\RtmpcfUAjP\\downloaded_packages\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(purrr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Paket 'purrr' wurde unter R Version 4.4.3 erstellt\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(readr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Paket 'readr' wurde unter R Version 4.4.3 erstellt\n```\n\n\n:::\n\n```{.r .cell-code}\n# List CSV files in the data folder\nfiles <- list.files(path = \"data/\", pattern = \"*.csv\", full.names = TRUE)\n\n# Read the headers of each file, suppressing the column type message\ncolumn_lists <- map(files, ~ names(read_csv(.x, n_max = 0, show_col_types = FALSE)))\n\n# View the columns of each file\nnames(column_lists) <- basename(files)\ncolumn_lists\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$`202401-citibike-tripdata.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202402-citibike-tripdata.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202403-citibike-tripdata.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202404-citibike-tripdata.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202405-citibike-tripdata_1.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202405-citibike-tripdata_2.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202405-citibike-tripdata_3.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202405-citibike-tripdata_4.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202405-citibike-tripdata_5.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202406-citibike-tripdata_1.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202406-citibike-tripdata_2.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202406-citibike-tripdata_3.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202406-citibike-tripdata_4.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202406-citibike-tripdata_5.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202407-citibike-tripdata_1.csv`\n [1] \"Unnamed: 0\"         \"ride_id\"            \"rideable_type\"     \n [4] \"started_at\"         \"ended_at\"           \"start_station_name\"\n [7] \"start_station_id\"   \"end_station_name\"   \"end_station_id\"    \n[10] \"start_lat\"          \"start_lng\"          \"end_lat\"           \n[13] \"end_lng\"            \"member_casual\"     \n\n$`202407-citibike-tripdata_2.csv`\n [1] \"Unnamed: 0\"         \"ride_id\"            \"rideable_type\"     \n [4] \"started_at\"         \"ended_at\"           \"start_station_name\"\n [7] \"start_station_id\"   \"end_station_name\"   \"end_station_id\"    \n[10] \"start_lat\"          \"start_lng\"          \"end_lat\"           \n[13] \"end_lng\"            \"member_casual\"     \n\n$`202407-citibike-tripdata_3.csv`\n [1] \"Unnamed: 0\"         \"ride_id\"            \"rideable_type\"     \n [4] \"started_at\"         \"ended_at\"           \"start_station_name\"\n [7] \"start_station_id\"   \"end_station_name\"   \"end_station_id\"    \n[10] \"start_lat\"          \"start_lng\"          \"end_lat\"           \n[13] \"end_lng\"            \"member_casual\"     \n\n$`202407-citibike-tripdata_4.csv`\n [1] \"Unnamed: 0\"         \"ride_id\"            \"rideable_type\"     \n [4] \"started_at\"         \"ended_at\"           \"start_station_name\"\n [7] \"start_station_id\"   \"end_station_name\"   \"end_station_id\"    \n[10] \"start_lat\"          \"start_lng\"          \"end_lat\"           \n[13] \"end_lng\"            \"member_casual\"     \n\n$`202407-citibike-tripdata_5.csv`\n [1] \"Unnamed: 0\"         \"ride_id\"            \"rideable_type\"     \n [4] \"started_at\"         \"ended_at\"           \"start_station_name\"\n [7] \"start_station_id\"   \"end_station_name\"   \"end_station_id\"    \n[10] \"start_lat\"          \"start_lng\"          \"end_lat\"           \n[13] \"end_lng\"            \"member_casual\"     \n\n$`202408-citibike-tripdata_1.csv`\n [1] \"rideable_type_duplicate_column_name_1\"\n [2] \"ride_id\"                              \n [3] \"rideable_type\"                        \n [4] \"started_at\"                           \n [5] \"ended_at\"                             \n [6] \"start_station_name\"                   \n [7] \"start_station_id\"                     \n [8] \"end_station_name\"                     \n [9] \"end_station_id\"                       \n[10] \"start_lat\"                            \n[11] \"start_lng\"                            \n[12] \"end_lat\"                              \n[13] \"end_lng\"                              \n[14] \"member_casual\"                        \n\n$`202408-citibike-tripdata_2.csv`\n [1] \"rideable_type_duplicate_column_name_1\"\n [2] \"ride_id\"                              \n [3] \"rideable_type\"                        \n [4] \"started_at\"                           \n [5] \"ended_at\"                             \n [6] \"start_station_name\"                   \n [7] \"start_station_id\"                     \n [8] \"end_station_name\"                     \n [9] \"end_station_id\"                       \n[10] \"start_lat\"                            \n[11] \"start_lng\"                            \n[12] \"end_lat\"                              \n[13] \"end_lng\"                              \n[14] \"member_casual\"                        \n\n$`202408-citibike-tripdata_3.csv`\n [1] \"rideable_type_duplicate_column_name_1\"\n [2] \"ride_id\"                              \n [3] \"rideable_type\"                        \n [4] \"started_at\"                           \n [5] \"ended_at\"                             \n [6] \"start_station_name\"                   \n [7] \"start_station_id\"                     \n [8] \"end_station_name\"                     \n [9] \"end_station_id\"                       \n[10] \"start_lat\"                            \n[11] \"start_lng\"                            \n[12] \"end_lat\"                              \n[13] \"end_lng\"                              \n[14] \"member_casual\"                        \n\n$`202408-citibike-tripdata_4.csv`\n [1] \"rideable_type_duplicate_column_name_1\"\n [2] \"ride_id\"                              \n [3] \"rideable_type\"                        \n [4] \"started_at\"                           \n [5] \"ended_at\"                             \n [6] \"start_station_name\"                   \n [7] \"start_station_id\"                     \n [8] \"end_station_name\"                     \n [9] \"end_station_id\"                       \n[10] \"start_lat\"                            \n[11] \"start_lng\"                            \n[12] \"end_lat\"                              \n[13] \"end_lng\"                              \n[14] \"member_casual\"                        \n\n$`202408-citibike-tripdata_5.csv`\n [1] \"rideable_type_duplicate_column_name_1\"\n [2] \"ride_id\"                              \n [3] \"rideable_type\"                        \n [4] \"started_at\"                           \n [5] \"ended_at\"                             \n [6] \"start_station_name\"                   \n [7] \"start_station_id\"                     \n [8] \"end_station_name\"                     \n [9] \"end_station_id\"                       \n[10] \"start_lat\"                            \n[11] \"start_lng\"                            \n[12] \"end_lat\"                              \n[13] \"end_lng\"                              \n[14] \"member_casual\"                        \n\n$`202409-citibike-tripdata_1.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202409-citibike-tripdata_2.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202409-citibike-tripdata_3.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202409-citibike-tripdata_4.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202409-citibike-tripdata_5.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202410-citibike-tripdata_1.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202410-citibike-tripdata_2.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202410-citibike-tripdata_3.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202410-citibike-tripdata_4.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202410-citibike-tripdata_5.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202410-citibike-tripdata_6.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202411-citibike-tripdata_1.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202411-citibike-tripdata_2.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202411-citibike-tripdata_3.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202411-citibike-tripdata_4.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202412-citibike-tripdata_1.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202412-citibike-tripdata_2.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n\n$`202412-citibike-tripdata_3.csv`\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n```\n\n\n:::\n:::\n\n\n\n#### Merging Columns\n\nThe column merging process aims to unify multiple CSV files into a single, clean, and consistent dataset. First, the files are loaded from the \"data\" folder and duplicate columns are removed. Then, the common columns across all files are identified to ensure they all share the same structure. If any columns are missing in some files, they are added with NA values and reordered to match the common columns. Additionally, station identifier columns are standardized to have consistent data types. Finally, the standardized files are combined into a single dataset using `bind_rows()`, ensuring that rows from each file are appended consistently.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary libraries\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttache Paket: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nDie folgenden Objekte sind maskiert von 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nDie folgenden Objekte sind maskiert von 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(tibble)\nlibrary(purrr)\n\n# Define the set of CSV files to read\nfiles <- list.files(path = \"data/\", pattern = \"*.csv\", full.names = TRUE)\n\n# Check if the files exist\nif(length(files) == 0) {\n  stop(\"No CSV files found in the specified path.\")\n}\n\n# Step 1: Read the files and store the columns\ncleaned_files <- map(files, function(file) {\n  data <- read_csv(file, show_col_types = FALSE)  # Suppress column type message\n  # Remove duplicate columns, if any (e.g., 'rideable_type_duplicate_column_name_1')\n  data <- data %>% select(-contains(\"duplicate_column_name\"))\n  return(data)\n})\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n```{.r .cell-code}\n# Check the columns of the cleaned files\ncleaned_column_lists <- map(cleaned_files, names)\n\n# Step 2: Identify common columns\nif (length(cleaned_column_lists) > 0) {\n  common_cols_cleaned <- reduce(cleaned_column_lists, intersect)\n} else {\n  stop(\"No common columns found among the files.\")\n}\n\n# Show common columns\nprint(\"Common columns across all files:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Common columns across all files:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(common_cols_cleaned)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n[13] \"member_casual\"     \n```\n\n\n:::\n\n```{.r .cell-code}\n# Step 3: Ensure all files have the same common columns and consistent data types\nstandardized_files <- map(cleaned_files, function(data) {\n  missing_cols <- setdiff(common_cols_cleaned, names(data))\n  # Add missing columns with NA values\n  data <- data %>% add_column(!!!setNames(rep(list(NA), length(missing_cols)), missing_cols), .after = 0)\n  # Reorder the columns according to the common columns\n  data <- data %>% select(all_of(common_cols_cleaned))\n  \n  # Convert columns to consistent types\n  # Convert 'start_station_id' and 'end_station_id' to character in all files\n  data <- data %>% mutate(\n    across(starts_with(\"start_station_id\"), as.character),\n    across(starts_with(\"end_station_id\"), as.character)\n  )\n  \n  return(data)\n})\n\n# Step 4: Combine the files\ncitibike_data_cleaned <- bind_rows(standardized_files)\n\n# Show the first rows of the combined dataset\nhead(citibike_data_cleaned)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 13\n  ride_id          rideable_type started_at          ended_at           \n  <chr>            <chr>         <dttm>              <dttm>             \n1 5078F3D302000BD2 electric_bike 2024-01-22 18:43:19 2024-01-22 18:48:10\n2 814337105D37302A electric_bike 2024-01-11 19:19:18 2024-01-11 19:47:36\n3 A33A920E2B10710C electric_bike 2024-01-30 19:17:41 2024-01-30 19:32:49\n4 A3A5FC0DD7D34D74 electric_bike 2024-01-27 11:27:01 2024-01-27 11:38:01\n5 6F96728ECEFBDAA4 electric_bike 2024-01-16 15:15:41 2024-01-16 15:29:26\n6 F14D51B89C28239A electric_bike 2024-01-12 15:27:53 2024-01-12 15:43:02\n# ℹ 9 more variables: start_station_name <chr>, start_station_id <chr>,\n#   end_station_name <chr>, end_station_id <chr>, start_lat <dbl>,\n#   start_lng <dbl>, end_lat <dbl>, end_lng <dbl>, member_casual <chr>\n```\n\n\n:::\n\n```{.r .cell-code}\n# Save the cleaned combined file to a CSV\n# write_csv(citibike_data_cleaned, \"citibike_combined_cleaned.csv\")\n\n# Summary of the cleaning and merging process\n# summary(citibike_data_cleaned)\n```\n:::\n\n\n\n#### Block-wise Processing and Data Transformation\n\nIn this step, the `procesar_en_bloques` function is defined to efficiently handle large volumes of data. Since the dataset can be very large, it is divided into blocks of a specified size (by default, 1 million rows). The function iterates through each data block, applying several transformations: it converts the start and end times of each ride to POSIX format, calculates the ride duration in minutes, extracts the month and day of the week, and assigns a season (spring, summer, fall, winter) based on the start month. The results of each block are stored and then combined using `bind_rows()`. Finally, memory is freed using `gc()` to optimize the performance of the process.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tidyr     1.3.1\n✔ lubridate 1.9.3     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(lubridate)\nlibrary(fasttime)\n\nrm(cleaned_files)\n\n# Function to process large datasets in blocks\nblock_processing <- function(data, block_size = 1e6) {\n  n <- nrow(data)\n  blocks <- ceiling(n / block_size)\n  \n  result <- vector(\"list\", blocks)\n  \n  for (i in seq_len(blocks)) {\n    cat(\"Processing block\", i, \"of\", blocks, \"...\\n\")\n    \n    start_time <- Sys.time()\n    \n    start <- ((i - 1) * block_size) + 1\n    end <- min(i * block_size, n)\n    \n    block <- data[start:end, ] %>%\n      mutate(\n        started_at = fastPOSIXct(started_at),\n        ended_at = fastPOSIXct(ended_at),\n        duration = as.numeric(difftime(ended_at, started_at, units = \"mins\")),\n        month = month(started_at, label = TRUE),\n        day_of_week = wday(started_at, label = TRUE),\n        season = case_when(\n          month(started_at) %in% c(12, 1, 2) ~ \"Winter\",\n          month(started_at) %in% c(3, 4, 5) ~ \"Spring\",\n          month(started_at) %in% c(6, 7, 8) ~ \"Summer\",\n          month(started_at) %in% c(9, 10, 11) ~ \"Fall\"\n        )\n      )\n    \n    result[[i]] <- block\n    \n    end_time <- Sys.time()\n    duration <- round(difftime(end_time, start_time, units = \"secs\"), 2)\n    cat(\"Block\", i, \"processed in\", duration, \"seconds.\\n\\n\")\n  }\n  \n  bind_rows(result)\n}\n\n# Apply the function to the cleaned Citi Bike dataset\ncitibike_data_cleaned <- block_processing(citibike_data_cleaned, block_size = 1e5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nProcessing block 1 of 444 ...\nBlock 1 processed in 1.19 seconds.\n\nProcessing block 2 of 444 ...\nBlock 2 processed in 4.73 seconds.\n\nProcessing block 3 of 444 ...\nBlock 3 processed in 4.85 seconds.\n\nProcessing block 4 of 444 ...\nBlock 4 processed in 8.22 seconds.\n\nProcessing block 5 of 444 ...\nBlock 5 processed in 1.13 seconds.\n\nProcessing block 6 of 444 ...\nBlock 6 processed in 1.16 seconds.\n\nProcessing block 7 of 444 ...\nBlock 7 processed in 1.14 seconds.\n\nProcessing block 8 of 444 ...\nBlock 8 processed in 1.15 seconds.\n\nProcessing block 9 of 444 ...\nBlock 9 processed in 1.16 seconds.\n\nProcessing block 10 of 444 ...\nBlock 10 processed in 1.17 seconds.\n\nProcessing block 11 of 444 ...\nBlock 11 processed in 1.18 seconds.\n\nProcessing block 12 of 444 ...\nBlock 12 processed in 1.17 seconds.\n\nProcessing block 13 of 444 ...\nBlock 13 processed in 1.18 seconds.\n\nProcessing block 14 of 444 ...\nBlock 14 processed in 1.18 seconds.\n\nProcessing block 15 of 444 ...\nBlock 15 processed in 1.18 seconds.\n\nProcessing block 16 of 444 ...\nBlock 16 processed in 1.18 seconds.\n\nProcessing block 17 of 444 ...\nBlock 17 processed in 1.2 seconds.\n\nProcessing block 18 of 444 ...\nBlock 18 processed in 1.19 seconds.\n\nProcessing block 19 of 444 ...\nBlock 19 processed in 1.2 seconds.\n\nProcessing block 20 of 444 ...\nBlock 20 processed in 1.22 seconds.\n\nProcessing block 21 of 444 ...\nBlock 21 processed in 5.97 seconds.\n\nProcessing block 22 of 444 ...\nBlock 22 processed in 1.2 seconds.\n\nProcessing block 23 of 444 ...\nBlock 23 processed in 1.2 seconds.\n\nProcessing block 24 of 444 ...\nBlock 24 processed in 1.37 seconds.\n\nProcessing block 25 of 444 ...\nBlock 25 processed in 1.4 seconds.\n\nProcessing block 26 of 444 ...\nBlock 26 processed in 1.21 seconds.\n\nProcessing block 27 of 444 ...\nBlock 27 processed in 1.19 seconds.\n\nProcessing block 28 of 444 ...\nBlock 28 processed in 1.2 seconds.\n\nProcessing block 29 of 444 ...\nBlock 29 processed in 1.19 seconds.\n\nProcessing block 30 of 444 ...\nBlock 30 processed in 1.2 seconds.\n\nProcessing block 31 of 444 ...\nBlock 31 processed in 1.21 seconds.\n\nProcessing block 32 of 444 ...\nBlock 32 processed in 1.56 seconds.\n\nProcessing block 33 of 444 ...\nBlock 33 processed in 1.31 seconds.\n\nProcessing block 34 of 444 ...\nBlock 34 processed in 1.26 seconds.\n\nProcessing block 35 of 444 ...\nBlock 35 processed in 1.23 seconds.\n\nProcessing block 36 of 444 ...\nBlock 36 processed in 7.91 seconds.\n\nProcessing block 37 of 444 ...\nBlock 37 processed in 1.3 seconds.\n\nProcessing block 38 of 444 ...\nBlock 38 processed in 1.26 seconds.\n\nProcessing block 39 of 444 ...\nBlock 39 processed in 1.24 seconds.\n\nProcessing block 40 of 444 ...\nBlock 40 processed in 1.26 seconds.\n\nProcessing block 41 of 444 ...\nBlock 41 processed in 1.41 seconds.\n\nProcessing block 42 of 444 ...\nBlock 42 processed in 1.51 seconds.\n\nProcessing block 43 of 444 ...\nBlock 43 processed in 1.35 seconds.\n\nProcessing block 44 of 444 ...\nBlock 44 processed in 1.39 seconds.\n\nProcessing block 45 of 444 ...\nBlock 45 processed in 1.4 seconds.\n\nProcessing block 46 of 444 ...\nBlock 46 processed in 1.44 seconds.\n\nProcessing block 47 of 444 ...\nBlock 47 processed in 1.42 seconds.\n\nProcessing block 48 of 444 ...\nBlock 48 processed in 14.16 seconds.\n\nProcessing block 49 of 444 ...\nBlock 49 processed in 1.26 seconds.\n\nProcessing block 50 of 444 ...\nBlock 50 processed in 1.23 seconds.\n\nProcessing block 51 of 444 ...\nBlock 51 processed in 1.25 seconds.\n\nProcessing block 52 of 444 ...\nBlock 52 processed in 1.32 seconds.\n\nProcessing block 53 of 444 ...\nBlock 53 processed in 1.21 seconds.\n\nProcessing block 54 of 444 ...\nBlock 54 processed in 1.24 seconds.\n\nProcessing block 55 of 444 ...\nBlock 55 processed in 1.28 seconds.\n\nProcessing block 56 of 444 ...\nBlock 56 processed in 1.25 seconds.\n\nProcessing block 57 of 444 ...\nBlock 57 processed in 1.29 seconds.\n\nProcessing block 58 of 444 ...\nBlock 58 processed in 1.28 seconds.\n\nProcessing block 59 of 444 ...\nBlock 59 processed in 1.27 seconds.\n\nProcessing block 60 of 444 ...\nBlock 60 processed in 1.26 seconds.\n\nProcessing block 61 of 444 ...\nBlock 61 processed in 1.26 seconds.\n\nProcessing block 62 of 444 ...\nBlock 62 processed in 1.25 seconds.\n\nProcessing block 63 of 444 ...\nBlock 63 processed in 1.26 seconds.\n\nProcessing block 64 of 444 ...\nBlock 64 processed in 1.28 seconds.\n\nProcessing block 65 of 444 ...\nBlock 65 processed in 1.29 seconds.\n\nProcessing block 66 of 444 ...\nBlock 66 processed in 1.25 seconds.\n\nProcessing block 67 of 444 ...\nBlock 67 processed in 1.29 seconds.\n\nProcessing block 68 of 444 ...\nBlock 68 processed in 1.34 seconds.\n\nProcessing block 69 of 444 ...\nBlock 69 processed in 1.3 seconds.\n\nProcessing block 70 of 444 ...\nBlock 70 processed in 1.31 seconds.\n\nProcessing block 71 of 444 ...\nBlock 71 processed in 1.28 seconds.\n\nProcessing block 72 of 444 ...\nBlock 72 processed in 1.3 seconds.\n\nProcessing block 73 of 444 ...\nBlock 73 processed in 1.3 seconds.\n\nProcessing block 74 of 444 ...\nBlock 74 processed in 1.29 seconds.\n\nProcessing block 75 of 444 ...\nBlock 75 processed in 1.38 seconds.\n\nProcessing block 76 of 444 ...\nBlock 76 processed in 1.32 seconds.\n\nProcessing block 77 of 444 ...\nBlock 77 processed in 1.38 seconds.\n\nProcessing block 78 of 444 ...\nBlock 78 processed in 1.32 seconds.\n\nProcessing block 79 of 444 ...\nBlock 79 processed in 1.33 seconds.\n\nProcessing block 80 of 444 ...\nBlock 80 processed in 8.18 seconds.\n\nProcessing block 81 of 444 ...\nBlock 81 processed in 1.35 seconds.\n\nProcessing block 82 of 444 ...\nBlock 82 processed in 1.32 seconds.\n\nProcessing block 83 of 444 ...\nBlock 83 processed in 1.5 seconds.\n\nProcessing block 84 of 444 ...\nBlock 84 processed in 1.58 seconds.\n\nProcessing block 85 of 444 ...\nBlock 85 processed in 1.28 seconds.\n\nProcessing block 86 of 444 ...\nBlock 86 processed in 1.27 seconds.\n\nProcessing block 87 of 444 ...\nBlock 87 processed in 1.25 seconds.\n\nProcessing block 88 of 444 ...\nBlock 88 processed in 1.27 seconds.\n\nProcessing block 89 of 444 ...\nBlock 89 processed in 1.27 seconds.\n\nProcessing block 90 of 444 ...\nBlock 90 processed in 1.29 seconds.\n\nProcessing block 91 of 444 ...\nBlock 91 processed in 1.27 seconds.\n\nProcessing block 92 of 444 ...\nBlock 92 processed in 1.27 seconds.\n\nProcessing block 93 of 444 ...\nBlock 93 processed in 1.28 seconds.\n\nProcessing block 94 of 444 ...\nBlock 94 processed in 1.27 seconds.\n\nProcessing block 95 of 444 ...\nBlock 95 processed in 1.28 seconds.\n\nProcessing block 96 of 444 ...\nBlock 96 processed in 1.27 seconds.\n\nProcessing block 97 of 444 ...\nBlock 97 processed in 1.26 seconds.\n\nProcessing block 98 of 444 ...\nBlock 98 processed in 14.75 seconds.\n\nProcessing block 99 of 444 ...\nBlock 99 processed in 1.24 seconds.\n\nProcessing block 100 of 444 ...\nBlock 100 processed in 1.07 seconds.\n\nProcessing block 101 of 444 ...\nBlock 101 processed in 1.08 seconds.\n\nProcessing block 102 of 444 ...\nBlock 102 processed in 1.05 seconds.\n\nProcessing block 103 of 444 ...\nBlock 103 processed in 1.09 seconds.\n\nProcessing block 104 of 444 ...\nBlock 104 processed in 7.48 seconds.\n\nProcessing block 105 of 444 ...\nBlock 105 processed in 1.12 seconds.\n\nProcessing block 106 of 444 ...\nBlock 106 processed in 1.09 seconds.\n\nProcessing block 107 of 444 ...\nBlock 107 processed in 1.05 seconds.\n\nProcessing block 108 of 444 ...\nBlock 108 processed in 1.04 seconds.\n\nProcessing block 109 of 444 ...\nBlock 109 processed in 1.18 seconds.\n\nProcessing block 110 of 444 ...\nBlock 110 processed in 1.2 seconds.\n\nProcessing block 111 of 444 ...\nBlock 111 processed in 1.07 seconds.\n\nProcessing block 112 of 444 ...\nBlock 112 processed in 1.06 seconds.\n\nProcessing block 113 of 444 ...\nBlock 113 processed in 1.07 seconds.\n\nProcessing block 114 of 444 ...\nBlock 114 processed in 1.09 seconds.\n\nProcessing block 115 of 444 ...\nBlock 115 processed in 1.08 seconds.\n\nProcessing block 116 of 444 ...\nBlock 116 processed in 1.08 seconds.\n\nProcessing block 117 of 444 ...\nBlock 117 processed in 1.07 seconds.\n\nProcessing block 118 of 444 ...\nBlock 118 processed in 1.09 seconds.\n\nProcessing block 119 of 444 ...\nBlock 119 processed in 1.09 seconds.\n\nProcessing block 120 of 444 ...\nBlock 120 processed in 1.08 seconds.\n\nProcessing block 121 of 444 ...\nBlock 121 processed in 1.13 seconds.\n\nProcessing block 122 of 444 ...\nBlock 122 processed in 1.13 seconds.\n\nProcessing block 123 of 444 ...\nBlock 123 processed in 1.13 seconds.\n\nProcessing block 124 of 444 ...\nBlock 124 processed in 1.09 seconds.\n\nProcessing block 125 of 444 ...\nBlock 125 processed in 1.09 seconds.\n\nProcessing block 126 of 444 ...\nBlock 126 processed in 14.29 seconds.\n\nProcessing block 127 of 444 ...\nBlock 127 processed in 1.14 seconds.\n\nProcessing block 128 of 444 ...\nBlock 128 processed in 1.1 seconds.\n\nProcessing block 129 of 444 ...\nBlock 129 processed in 1.14 seconds.\n\nProcessing block 130 of 444 ...\nBlock 130 processed in 1.29 seconds.\n\nProcessing block 131 of 444 ...\nBlock 131 processed in 1.42 seconds.\n\nProcessing block 132 of 444 ...\nBlock 132 processed in 1.35 seconds.\n\nProcessing block 133 of 444 ...\nBlock 133 processed in 1.42 seconds.\n\nProcessing block 134 of 444 ...\nBlock 134 processed in 1.41 seconds.\n\nProcessing block 135 of 444 ...\nBlock 135 processed in 1.38 seconds.\n\nProcessing block 136 of 444 ...\nBlock 136 processed in 1.34 seconds.\n\nProcessing block 137 of 444 ...\nBlock 137 processed in 1.2 seconds.\n\nProcessing block 138 of 444 ...\nBlock 138 processed in 1.14 seconds.\n\nProcessing block 139 of 444 ...\nBlock 139 processed in 1.14 seconds.\n\nProcessing block 140 of 444 ...\nBlock 140 processed in 1.16 seconds.\n\nProcessing block 141 of 444 ...\nBlock 141 processed in 1.17 seconds.\n\nProcessing block 142 of 444 ...\nBlock 142 processed in 1.33 seconds.\n\nProcessing block 143 of 444 ...\nBlock 143 processed in 1.41 seconds.\n\nProcessing block 144 of 444 ...\nBlock 144 processed in 1.46 seconds.\n\nProcessing block 145 of 444 ...\nBlock 145 processed in 1.46 seconds.\n\nProcessing block 146 of 444 ...\nBlock 146 processed in 21.98 seconds.\n\nProcessing block 147 of 444 ...\nBlock 147 processed in 1.59 seconds.\n\nProcessing block 148 of 444 ...\nBlock 148 processed in 1.62 seconds.\n\nProcessing block 149 of 444 ...\nBlock 149 processed in 1.51 seconds.\n\nProcessing block 150 of 444 ...\nBlock 150 processed in 1.36 seconds.\n\nProcessing block 151 of 444 ...\nBlock 151 processed in 1.34 seconds.\n\nProcessing block 152 of 444 ...\nBlock 152 processed in 1.43 seconds.\n\nProcessing block 153 of 444 ...\nBlock 153 processed in 1.42 seconds.\n\nProcessing block 154 of 444 ...\nBlock 154 processed in 1.44 seconds.\n\nProcessing block 155 of 444 ...\nBlock 155 processed in 1.43 seconds.\n\nProcessing block 156 of 444 ...\nBlock 156 processed in 1.49 seconds.\n\nProcessing block 157 of 444 ...\nBlock 157 processed in 1.55 seconds.\n\nProcessing block 158 of 444 ...\nBlock 158 processed in 1.42 seconds.\n\nProcessing block 159 of 444 ...\nBlock 159 processed in 1.62 seconds.\n\nProcessing block 160 of 444 ...\nBlock 160 processed in 1.33 seconds.\n\nProcessing block 161 of 444 ...\nBlock 161 processed in 1.37 seconds.\n\nProcessing block 162 of 444 ...\nBlock 162 processed in 1.69 seconds.\n\nProcessing block 163 of 444 ...\nBlock 163 processed in 1.92 seconds.\n\nProcessing block 164 of 444 ...\nBlock 164 processed in 1.96 seconds.\n\nProcessing block 165 of 444 ...\nBlock 165 processed in 1.74 seconds.\n\nProcessing block 166 of 444 ...\nBlock 166 processed in 1.55 seconds.\n\nProcessing block 167 of 444 ...\nBlock 167 processed in 1.47 seconds.\n\nProcessing block 168 of 444 ...\nBlock 168 processed in 1.47 seconds.\n\nProcessing block 169 of 444 ...\nBlock 169 processed in 1.44 seconds.\n\nProcessing block 170 of 444 ...\nBlock 170 processed in 1.55 seconds.\n\nProcessing block 171 of 444 ...\nBlock 171 processed in 1.55 seconds.\n\nProcessing block 172 of 444 ...\nBlock 172 processed in 4.26 seconds.\n\nProcessing block 173 of 444 ...\nBlock 173 processed in 4.5 seconds.\n\nProcessing block 174 of 444 ...\nBlock 174 processed in 3.17 seconds.\n\nProcessing block 175 of 444 ...\nBlock 175 processed in 3.66 seconds.\n\nProcessing block 176 of 444 ...\nBlock 176 processed in 8.54 seconds.\n\nProcessing block 177 of 444 ...\nBlock 177 processed in 91.45 seconds.\n\nProcessing block 178 of 444 ...\nBlock 178 processed in 22.79 seconds.\n\nProcessing block 179 of 444 ...\nBlock 179 processed in 23.34 seconds.\n\nProcessing block 180 of 444 ...\nBlock 180 processed in 14.8 seconds.\n\nProcessing block 181 of 444 ...\nBlock 181 processed in 4.56 seconds.\n\nProcessing block 182 of 444 ...\nBlock 182 processed in 3.4 seconds.\n\nProcessing block 183 of 444 ...\nBlock 183 processed in 4.25 seconds.\n\nProcessing block 184 of 444 ...\nBlock 184 processed in 3 seconds.\n\nProcessing block 185 of 444 ...\nBlock 185 processed in 2.43 seconds.\n\nProcessing block 186 of 444 ...\nBlock 186 processed in 2.21 seconds.\n\nProcessing block 187 of 444 ...\nBlock 187 processed in 2.02 seconds.\n\nProcessing block 188 of 444 ...\nBlock 188 processed in 2.12 seconds.\n\nProcessing block 189 of 444 ...\nBlock 189 processed in 22.71 seconds.\n\nProcessing block 190 of 444 ...\nBlock 190 processed in 1.4 seconds.\n\nProcessing block 191 of 444 ...\nBlock 191 processed in 1.32 seconds.\n\nProcessing block 192 of 444 ...\nBlock 192 processed in 1.43 seconds.\n\nProcessing block 193 of 444 ...\nBlock 193 processed in 1.34 seconds.\n\nProcessing block 194 of 444 ...\nBlock 194 processed in 1.38 seconds.\n\nProcessing block 195 of 444 ...\nBlock 195 processed in 1.38 seconds.\n\nProcessing block 196 of 444 ...\nBlock 196 processed in 1.37 seconds.\n\nProcessing block 197 of 444 ...\nBlock 197 processed in 1.39 seconds.\n\nProcessing block 198 of 444 ...\nBlock 198 processed in 1.35 seconds.\n\nProcessing block 199 of 444 ...\nBlock 199 processed in 1.4 seconds.\n\nProcessing block 200 of 444 ...\nBlock 200 processed in 1.42 seconds.\n\nProcessing block 201 of 444 ...\nBlock 201 processed in 1.46 seconds.\n\nProcessing block 202 of 444 ...\nBlock 202 processed in 1.42 seconds.\n\nProcessing block 203 of 444 ...\nBlock 203 processed in 1.45 seconds.\n\nProcessing block 204 of 444 ...\nBlock 204 processed in 1.41 seconds.\n\nProcessing block 205 of 444 ...\nBlock 205 processed in 1.38 seconds.\n\nProcessing block 206 of 444 ...\nBlock 206 processed in 1.43 seconds.\n\nProcessing block 207 of 444 ...\nBlock 207 processed in 1.45 seconds.\n\nProcessing block 208 of 444 ...\nBlock 208 processed in 1.55 seconds.\n\nProcessing block 209 of 444 ...\nBlock 209 processed in 1.65 seconds.\n\nProcessing block 210 of 444 ...\nBlock 210 processed in 1.68 seconds.\n\nProcessing block 211 of 444 ...\nBlock 211 processed in 1.67 seconds.\n\nProcessing block 212 of 444 ...\nBlock 212 processed in 1.6 seconds.\n\nProcessing block 213 of 444 ...\nBlock 213 processed in 1.58 seconds.\n\nProcessing block 214 of 444 ...\nBlock 214 processed in 1.48 seconds.\n\nProcessing block 215 of 444 ...\nBlock 215 processed in 1.55 seconds.\n\nProcessing block 216 of 444 ...\nBlock 216 processed in 1.76 seconds.\n\nProcessing block 217 of 444 ...\nBlock 217 processed in 1.59 seconds.\n\nProcessing block 218 of 444 ...\nBlock 218 processed in 1.66 seconds.\n\nProcessing block 219 of 444 ...\nBlock 219 processed in 1.47 seconds.\n\nProcessing block 220 of 444 ...\nBlock 220 processed in 1.46 seconds.\n\nProcessing block 221 of 444 ...\nBlock 221 processed in 1.45 seconds.\n\nProcessing block 222 of 444 ...\nBlock 222 processed in 1.45 seconds.\n\nProcessing block 223 of 444 ...\nBlock 223 processed in 1.64 seconds.\n\nProcessing block 224 of 444 ...\nBlock 224 processed in 1.44 seconds.\n\nProcessing block 225 of 444 ...\nBlock 225 processed in 1.46 seconds.\n\nProcessing block 226 of 444 ...\nBlock 226 processed in 1.45 seconds.\n\nProcessing block 227 of 444 ...\nBlock 227 processed in 10.95 seconds.\n\nProcessing block 228 of 444 ...\nBlock 228 processed in 1.5 seconds.\n\nProcessing block 229 of 444 ...\nBlock 229 processed in 1.3 seconds.\n\nProcessing block 230 of 444 ...\nBlock 230 processed in 1.32 seconds.\n\nProcessing block 231 of 444 ...\nBlock 231 processed in 1.32 seconds.\n\nProcessing block 232 of 444 ...\nBlock 232 processed in 1.24 seconds.\n\nProcessing block 233 of 444 ...\nBlock 233 processed in 1.29 seconds.\n\nProcessing block 234 of 444 ...\nBlock 234 processed in 1.28 seconds.\n\nProcessing block 235 of 444 ...\nBlock 235 processed in 1.27 seconds.\n\nProcessing block 236 of 444 ...\nBlock 236 processed in 1.26 seconds.\n\nProcessing block 237 of 444 ...\nBlock 237 processed in 1.29 seconds.\n\nProcessing block 238 of 444 ...\nBlock 238 processed in 1.32 seconds.\n\nProcessing block 239 of 444 ...\nBlock 239 processed in 1.43 seconds.\n\nProcessing block 240 of 444 ...\nBlock 240 processed in 1.41 seconds.\n\nProcessing block 241 of 444 ...\nBlock 241 processed in 1.31 seconds.\n\nProcessing block 242 of 444 ...\nBlock 242 processed in 1.27 seconds.\n\nProcessing block 243 of 444 ...\nBlock 243 processed in 1.27 seconds.\n\nProcessing block 244 of 444 ...\nBlock 244 processed in 1.32 seconds.\n\nProcessing block 245 of 444 ...\nBlock 245 processed in 1.32 seconds.\n\nProcessing block 246 of 444 ...\nBlock 246 processed in 1.29 seconds.\n\nProcessing block 247 of 444 ...\nBlock 247 processed in 1.31 seconds.\n\nProcessing block 248 of 444 ...\nBlock 248 processed in 1.33 seconds.\n\nProcessing block 249 of 444 ...\nBlock 249 processed in 1.26 seconds.\n\nProcessing block 250 of 444 ...\nBlock 250 processed in 1.31 seconds.\n\nProcessing block 251 of 444 ...\nBlock 251 processed in 1.3 seconds.\n\nProcessing block 252 of 444 ...\nBlock 252 processed in 1.3 seconds.\n\nProcessing block 253 of 444 ...\nBlock 253 processed in 1.35 seconds.\n\nProcessing block 254 of 444 ...\nBlock 254 processed in 1.34 seconds.\n\nProcessing block 255 of 444 ...\nBlock 255 processed in 17.9 seconds.\n\nProcessing block 256 of 444 ...\nBlock 256 processed in 1.38 seconds.\n\nProcessing block 257 of 444 ...\nBlock 257 processed in 1.37 seconds.\n\nProcessing block 258 of 444 ...\nBlock 258 processed in 1.35 seconds.\n\nProcessing block 259 of 444 ...\nBlock 259 processed in 1.32 seconds.\n\nProcessing block 260 of 444 ...\nBlock 260 processed in 1.33 seconds.\n\nProcessing block 261 of 444 ...\nBlock 261 processed in 1.37 seconds.\n\nProcessing block 262 of 444 ...\nBlock 262 processed in 1.37 seconds.\n\nProcessing block 263 of 444 ...\nBlock 263 processed in 1.34 seconds.\n\nProcessing block 264 of 444 ...\nBlock 264 processed in 1.36 seconds.\n\nProcessing block 265 of 444 ...\nBlock 265 processed in 1.32 seconds.\n\nProcessing block 266 of 444 ...\nBlock 266 processed in 1.33 seconds.\n\nProcessing block 267 of 444 ...\nBlock 267 processed in 1.34 seconds.\n\nProcessing block 268 of 444 ...\nBlock 268 processed in 1.35 seconds.\n\nProcessing block 269 of 444 ...\nBlock 269 processed in 1.33 seconds.\n\nProcessing block 270 of 444 ...\nBlock 270 processed in 1.37 seconds.\n\nProcessing block 271 of 444 ...\nBlock 271 processed in 1.37 seconds.\n\nProcessing block 272 of 444 ...\nBlock 272 processed in 1.39 seconds.\n\nProcessing block 273 of 444 ...\nBlock 273 processed in 1.35 seconds.\n\nProcessing block 274 of 444 ...\nBlock 274 processed in 1.3 seconds.\n\nProcessing block 275 of 444 ...\nBlock 275 processed in 38.33 seconds.\n\nProcessing block 276 of 444 ...\nBlock 276 processed in 1.13 seconds.\n\nProcessing block 277 of 444 ...\nBlock 277 processed in 1.15 seconds.\n\nProcessing block 278 of 444 ...\nBlock 278 processed in 1.15 seconds.\n\nProcessing block 279 of 444 ...\nBlock 279 processed in 1.15 seconds.\n\nProcessing block 280 of 444 ...\nBlock 280 processed in 1.15 seconds.\n\nProcessing block 281 of 444 ...\nBlock 281 processed in 1.15 seconds.\n\nProcessing block 282 of 444 ...\nBlock 282 processed in 1.15 seconds.\n\nProcessing block 283 of 444 ...\nBlock 283 processed in 1.15 seconds.\n\nProcessing block 284 of 444 ...\nBlock 284 processed in 1.15 seconds.\n\nProcessing block 285 of 444 ...\nBlock 285 processed in 1.16 seconds.\n\nProcessing block 286 of 444 ...\nBlock 286 processed in 1.21 seconds.\n\nProcessing block 287 of 444 ...\nBlock 287 processed in 1.15 seconds.\n\nProcessing block 288 of 444 ...\nBlock 288 processed in 1.16 seconds.\n\nProcessing block 289 of 444 ...\nBlock 289 processed in 1.16 seconds.\n\nProcessing block 290 of 444 ...\nBlock 290 processed in 1.16 seconds.\n\nProcessing block 291 of 444 ...\nBlock 291 processed in 1.16 seconds.\n\nProcessing block 292 of 444 ...\nBlock 292 processed in 1.16 seconds.\n\nProcessing block 293 of 444 ...\nBlock 293 processed in 1.17 seconds.\n\nProcessing block 294 of 444 ...\nBlock 294 processed in 1.46 seconds.\n\nProcessing block 295 of 444 ...\nBlock 295 processed in 1.15 seconds.\n\nProcessing block 296 of 444 ...\nBlock 296 processed in 1.18 seconds.\n\nProcessing block 297 of 444 ...\nBlock 297 processed in 1.19 seconds.\n\nProcessing block 298 of 444 ...\nBlock 298 processed in 1.18 seconds.\n\nProcessing block 299 of 444 ...\nBlock 299 processed in 1.18 seconds.\n\nProcessing block 300 of 444 ...\nBlock 300 processed in 1.19 seconds.\n\nProcessing block 301 of 444 ...\nBlock 301 processed in 1.23 seconds.\n\nProcessing block 302 of 444 ...\nBlock 302 processed in 1.2 seconds.\n\nProcessing block 303 of 444 ...\nBlock 303 processed in 1.2 seconds.\n\nProcessing block 304 of 444 ...\nBlock 304 processed in 1.2 seconds.\n\nProcessing block 305 of 444 ...\nBlock 305 processed in 1.2 seconds.\n\nProcessing block 306 of 444 ...\nBlock 306 processed in 1.21 seconds.\n\nProcessing block 307 of 444 ...\nBlock 307 processed in 1.2 seconds.\n\nProcessing block 308 of 444 ...\nBlock 308 processed in 1.24 seconds.\n\nProcessing block 309 of 444 ...\nBlock 309 processed in 1.22 seconds.\n\nProcessing block 310 of 444 ...\nBlock 310 processed in 1.22 seconds.\n\nProcessing block 311 of 444 ...\nBlock 311 processed in 1.21 seconds.\n\nProcessing block 312 of 444 ...\nBlock 312 processed in 1.2 seconds.\n\nProcessing block 313 of 444 ...\nBlock 313 processed in 1.21 seconds.\n\nProcessing block 314 of 444 ...\nBlock 314 processed in 1.21 seconds.\n\nProcessing block 315 of 444 ...\nBlock 315 processed in 1.25 seconds.\n\nProcessing block 316 of 444 ...\nBlock 316 processed in 1.22 seconds.\n\nProcessing block 317 of 444 ...\nBlock 317 processed in 1.2 seconds.\n\nProcessing block 318 of 444 ...\nBlock 318 processed in 1.54 seconds.\n\nProcessing block 319 of 444 ...\nBlock 319 processed in 1.22 seconds.\n\nProcessing block 320 of 444 ...\nBlock 320 processed in 1.23 seconds.\n\nProcessing block 321 of 444 ...\nBlock 321 processed in 1.23 seconds.\n\nProcessing block 322 of 444 ...\nBlock 322 processed in 1.24 seconds.\n\nProcessing block 323 of 444 ...\nBlock 323 processed in 1.26 seconds.\n\nProcessing block 324 of 444 ...\nBlock 324 processed in 1.27 seconds.\n\nProcessing block 325 of 444 ...\nBlock 325 processed in 1.31 seconds.\n\nProcessing block 326 of 444 ...\nBlock 326 processed in 1.31 seconds.\n\nProcessing block 327 of 444 ...\nBlock 327 processed in 1.24 seconds.\n\nProcessing block 328 of 444 ...\nBlock 328 processed in 1.28 seconds.\n\nProcessing block 329 of 444 ...\nBlock 329 processed in 1.25 seconds.\n\nProcessing block 330 of 444 ...\nBlock 330 processed in 1.33 seconds.\n\nProcessing block 331 of 444 ...\nBlock 331 processed in 1.27 seconds.\n\nProcessing block 332 of 444 ...\nBlock 332 processed in 1.23 seconds.\n\nProcessing block 333 of 444 ...\nBlock 333 processed in 1.24 seconds.\n\nProcessing block 334 of 444 ...\nBlock 334 processed in 10.92 seconds.\n\nProcessing block 335 of 444 ...\nBlock 335 processed in 1.3 seconds.\n\nProcessing block 336 of 444 ...\nBlock 336 processed in 1.23 seconds.\n\nProcessing block 337 of 444 ...\nBlock 337 processed in 1.23 seconds.\n\nProcessing block 338 of 444 ...\nBlock 338 processed in 1.23 seconds.\n\nProcessing block 339 of 444 ...\nBlock 339 processed in 1.22 seconds.\n\nProcessing block 340 of 444 ...\nBlock 340 processed in 1.24 seconds.\n\nProcessing block 341 of 444 ...\nBlock 341 processed in 1.25 seconds.\n\nProcessing block 342 of 444 ...\nBlock 342 processed in 1.25 seconds.\n\nProcessing block 343 of 444 ...\nBlock 343 processed in 1.24 seconds.\n\nProcessing block 344 of 444 ...\nBlock 344 processed in 1.28 seconds.\n\nProcessing block 345 of 444 ...\nBlock 345 processed in 1.21 seconds.\n\nProcessing block 346 of 444 ...\nBlock 346 processed in 1.22 seconds.\n\nProcessing block 347 of 444 ...\nBlock 347 processed in 1.23 seconds.\n\nProcessing block 348 of 444 ...\nBlock 348 processed in 1.22 seconds.\n\nProcessing block 349 of 444 ...\nBlock 349 processed in 1.22 seconds.\n\nProcessing block 350 of 444 ...\nBlock 350 processed in 1.22 seconds.\n\nProcessing block 351 of 444 ...\nBlock 351 processed in 1.23 seconds.\n\nProcessing block 352 of 444 ...\nBlock 352 processed in 1.2 seconds.\n\nProcessing block 353 of 444 ...\nBlock 353 processed in 1.25 seconds.\n\nProcessing block 354 of 444 ...\nBlock 354 processed in 1.26 seconds.\n\nProcessing block 355 of 444 ...\nBlock 355 processed in 1.27 seconds.\n\nProcessing block 356 of 444 ...\nBlock 356 processed in 1.54 seconds.\n\nProcessing block 357 of 444 ...\nBlock 357 processed in 1.55 seconds.\n\nProcessing block 358 of 444 ...\nBlock 358 processed in 1.55 seconds.\n\nProcessing block 359 of 444 ...\nBlock 359 processed in 1.23 seconds.\n\nProcessing block 360 of 444 ...\nBlock 360 processed in 1.23 seconds.\n\nProcessing block 361 of 444 ...\nBlock 361 processed in 1.22 seconds.\n\nProcessing block 362 of 444 ...\nBlock 362 processed in 1.23 seconds.\n\nProcessing block 363 of 444 ...\nBlock 363 processed in 1.23 seconds.\n\nProcessing block 364 of 444 ...\nBlock 364 processed in 1.24 seconds.\n\nProcessing block 365 of 444 ...\nBlock 365 processed in 1.28 seconds.\n\nProcessing block 366 of 444 ...\nBlock 366 processed in 1.23 seconds.\n\nProcessing block 367 of 444 ...\nBlock 367 processed in 1.26 seconds.\n\nProcessing block 368 of 444 ...\nBlock 368 processed in 1.24 seconds.\n\nProcessing block 369 of 444 ...\nBlock 369 processed in 1.24 seconds.\n\nProcessing block 370 of 444 ...\nBlock 370 processed in 1.23 seconds.\n\nProcessing block 371 of 444 ...\nBlock 371 processed in 1.26 seconds.\n\nProcessing block 372 of 444 ...\nBlock 372 processed in 1.23 seconds.\n\nProcessing block 373 of 444 ...\nBlock 373 processed in 1.24 seconds.\n\nProcessing block 374 of 444 ...\nBlock 374 processed in 1.25 seconds.\n\nProcessing block 375 of 444 ...\nBlock 375 processed in 1.24 seconds.\n\nProcessing block 376 of 444 ...\nBlock 376 processed in 1.26 seconds.\n\nProcessing block 377 of 444 ...\nBlock 377 processed in 1.29 seconds.\n\nProcessing block 378 of 444 ...\nBlock 378 processed in 1.29 seconds.\n\nProcessing block 379 of 444 ...\nBlock 379 processed in 1.29 seconds.\n\nProcessing block 380 of 444 ...\nBlock 380 processed in 1.28 seconds.\n\nProcessing block 381 of 444 ...\nBlock 381 processed in 1.28 seconds.\n\nProcessing block 382 of 444 ...\nBlock 382 processed in 1.32 seconds.\n\nProcessing block 383 of 444 ...\nBlock 383 processed in 1.32 seconds.\n\nProcessing block 384 of 444 ...\nBlock 384 processed in 11.4 seconds.\n\nProcessing block 385 of 444 ...\nBlock 385 processed in 1.38 seconds.\n\nProcessing block 386 of 444 ...\nBlock 386 processed in 1.32 seconds.\n\nProcessing block 387 of 444 ...\nBlock 387 processed in 1.29 seconds.\n\nProcessing block 388 of 444 ...\nBlock 388 processed in 1.28 seconds.\n\nProcessing block 389 of 444 ...\nBlock 389 processed in 1.3 seconds.\n\nProcessing block 390 of 444 ...\nBlock 390 processed in 1.28 seconds.\n\nProcessing block 391 of 444 ...\nBlock 391 processed in 1.26 seconds.\n\nProcessing block 392 of 444 ...\nBlock 392 processed in 21.37 seconds.\n\nProcessing block 393 of 444 ...\nBlock 393 processed in 1.18 seconds.\n\nProcessing block 394 of 444 ...\nBlock 394 processed in 1.23 seconds.\n\nProcessing block 395 of 444 ...\nBlock 395 processed in 1.32 seconds.\n\nProcessing block 396 of 444 ...\nBlock 396 processed in 1.37 seconds.\n\nProcessing block 397 of 444 ...\nBlock 397 processed in 1.36 seconds.\n\nProcessing block 398 of 444 ...\nBlock 398 processed in 1.38 seconds.\n\nProcessing block 399 of 444 ...\nBlock 399 processed in 1.37 seconds.\n\nProcessing block 400 of 444 ...\nBlock 400 processed in 1.38 seconds.\n\nProcessing block 401 of 444 ...\nBlock 401 processed in 1.44 seconds.\n\nProcessing block 402 of 444 ...\nBlock 402 processed in 1.41 seconds.\n\nProcessing block 403 of 444 ...\nBlock 403 processed in 1.41 seconds.\n\nProcessing block 404 of 444 ...\nBlock 404 processed in 1.39 seconds.\n\nProcessing block 405 of 444 ...\nBlock 405 processed in 1.37 seconds.\n\nProcessing block 406 of 444 ...\nBlock 406 processed in 1.39 seconds.\n\nProcessing block 407 of 444 ...\nBlock 407 processed in 1.39 seconds.\n\nProcessing block 408 of 444 ...\nBlock 408 processed in 1.46 seconds.\n\nProcessing block 409 of 444 ...\nBlock 409 processed in 1.38 seconds.\n\nProcessing block 410 of 444 ...\nBlock 410 processed in 1.42 seconds.\n\nProcessing block 411 of 444 ...\nBlock 411 processed in 1.39 seconds.\n\nProcessing block 412 of 444 ...\nBlock 412 processed in 1.36 seconds.\n\nProcessing block 413 of 444 ...\nBlock 413 processed in 1.37 seconds.\n\nProcessing block 414 of 444 ...\nBlock 414 processed in 1.37 seconds.\n\nProcessing block 415 of 444 ...\nBlock 415 processed in 1.37 seconds.\n\nProcessing block 416 of 444 ...\nBlock 416 processed in 1.39 seconds.\n\nProcessing block 417 of 444 ...\nBlock 417 processed in 1.38 seconds.\n\nProcessing block 418 of 444 ...\nBlock 418 processed in 1.39 seconds.\n\nProcessing block 419 of 444 ...\nBlock 419 processed in 1.38 seconds.\n\nProcessing block 420 of 444 ...\nBlock 420 processed in 1.37 seconds.\n\nProcessing block 421 of 444 ...\nBlock 421 processed in 1.44 seconds.\n\nProcessing block 422 of 444 ...\nBlock 422 processed in 1.37 seconds.\n\nProcessing block 423 of 444 ...\nBlock 423 processed in 1.4 seconds.\n\nProcessing block 424 of 444 ...\nBlock 424 processed in 1.43 seconds.\n\nProcessing block 425 of 444 ...\nBlock 425 processed in 1.46 seconds.\n\nProcessing block 426 of 444 ...\nBlock 426 processed in 1.44 seconds.\n\nProcessing block 427 of 444 ...\nBlock 427 processed in 1.41 seconds.\n\nProcessing block 428 of 444 ...\nBlock 428 processed in 1.46 seconds.\n\nProcessing block 429 of 444 ...\nBlock 429 processed in 1.42 seconds.\n\nProcessing block 430 of 444 ...\nBlock 430 processed in 1.41 seconds.\n\nProcessing block 431 of 444 ...\nBlock 431 processed in 1.46 seconds.\n\nProcessing block 432 of 444 ...\nBlock 432 processed in 1.42 seconds.\n\nProcessing block 433 of 444 ...\nBlock 433 processed in 1.46 seconds.\n\nProcessing block 434 of 444 ...\nBlock 434 processed in 1.42 seconds.\n\nProcessing block 435 of 444 ...\nBlock 435 processed in 1.46 seconds.\n\nProcessing block 436 of 444 ...\nBlock 436 processed in 1.41 seconds.\n\nProcessing block 437 of 444 ...\nBlock 437 processed in 1.42 seconds.\n\nProcessing block 438 of 444 ...\nBlock 438 processed in 1.44 seconds.\n\nProcessing block 439 of 444 ...\nBlock 439 processed in 1.49 seconds.\n\nProcessing block 440 of 444 ...\nBlock 440 processed in 1.49 seconds.\n\nProcessing block 441 of 444 ...\nBlock 441 processed in 1.52 seconds.\n\nProcessing block 442 of 444 ...\nBlock 442 processed in 11.92 seconds.\n\nProcessing block 443 of 444 ...\nBlock 443 processed in 1.44 seconds.\n\nProcessing block 444 of 444 ...\nBlock 444 processed in 1.45 seconds.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Free memory\ngc()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n             used    (Mb) gc trigger    (Mb)   max used    (Mb)\nNcells   45530610  2431.6   83513738  4460.2   83513738  4460.2\nVcells 1618298216 12346.7 3086819378 23550.6 3086806660 23550.5\n```\n\n\n:::\n:::\n\n\n\n### Data Load Verification\n\nIn this section, we verify the number of rows in each CSV file to ensure that all files have been loaded correctly. The `map_int()` function is used to count the rows of each file, and the result is printed for review.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Verify the number of rows in each CSV file read, suppressing the column specification message\ntibble(file = files) %>%\n  mutate(rows = map_int(file, ~nrow(read_csv(.x, show_col_types = FALSE)))) %>%\n  print(n = Inf)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There were 42 warnings in `mutate()`.\nThe first warning was:\nℹ In argument: `rows = map_int(file, ~nrow(read_csv(.x, show_col_types =\n  FALSE)))`.\nCaused by warning:\n! One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\nℹ Run `dplyr::last_dplyr_warnings()` to see the 41 remaining warnings.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 42 × 2\n   file                                   rows\n   <chr>                                 <int>\n 1 data/202401-citibike-tripdata.csv   1888085\n 2 data/202402-citibike-tripdata.csv   2121501\n 3 data/202403-citibike-tripdata.csv   2663295\n 4 data/202404-citibike-tripdata.csv   3217063\n 5 data/202405-citibike-tripdata_1.csv 1000000\n 6 data/202405-citibike-tripdata_2.csv 1000000\n 7 data/202405-citibike-tripdata_3.csv 1000000\n 8 data/202405-citibike-tripdata_4.csv 1000000\n 9 data/202405-citibike-tripdata_5.csv  230360\n10 data/202406-citibike-tripdata_1.csv 1000000\n11 data/202406-citibike-tripdata_2.csv 1000000\n12 data/202406-citibike-tripdata_3.csv 1000000\n13 data/202406-citibike-tripdata_4.csv 1000000\n14 data/202406-citibike-tripdata_5.csv  783576\n15 data/202407-citibike-tripdata_1.csv 1000000\n16 data/202407-citibike-tripdata_2.csv 1000000\n17 data/202407-citibike-tripdata_3.csv 1000000\n18 data/202407-citibike-tripdata_4.csv 1000000\n19 data/202407-citibike-tripdata_5.csv  722896\n20 data/202408-citibike-tripdata_1.csv 1000000\n21 data/202408-citibike-tripdata_2.csv 1000000\n22 data/202408-citibike-tripdata_3.csv 1000000\n23 data/202408-citibike-tripdata_4.csv 1000000\n24 data/202408-citibike-tripdata_5.csv  603575\n25 data/202409-citibike-tripdata_1.csv 1000000\n26 data/202409-citibike-tripdata_2.csv 1000000\n27 data/202409-citibike-tripdata_3.csv 1000000\n28 data/202409-citibike-tripdata_4.csv 1000000\n29 data/202409-citibike-tripdata_5.csv  997898\n30 data/202410-citibike-tripdata_1.csv 1000000\n31 data/202410-citibike-tripdata_2.csv 1000000\n32 data/202410-citibike-tripdata_3.csv 1000000\n33 data/202410-citibike-tripdata_4.csv 1000000\n34 data/202410-citibike-tripdata_5.csv 1000000\n35 data/202410-citibike-tripdata_6.csv  150054\n36 data/202411-citibike-tripdata_1.csv 1000000\n37 data/202411-citibike-tripdata_2.csv 1000000\n38 data/202411-citibike-tripdata_3.csv 1000000\n39 data/202411-citibike-tripdata_4.csv  710134\n40 data/202412-citibike-tripdata_1.csv 1000000\n41 data/202412-citibike-tripdata_2.csv 1000000\n42 data/202412-citibike-tripdata_3.csv  311171\n```\n\n\n:::\n:::\n\n\n\n## Exploratory Data Analysis\n\n### Data Summary\n\nThis section provides an overview of the cleaned dataset using the `glimpse()` function, which displays the structure and the first few rows of the data. Additionally, descriptive statistics for the `duration` variable are calculated to gain a basic understanding of the distribution of bike trip durations in the system.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data Overview\nglimpse(citibike_data_cleaned)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 44,399,608\nColumns: 17\n$ ride_id            <chr> \"5078F3D302000BD2\", \"814337105D37302A\", \"A33A920E2B…\n$ rideable_type      <chr> \"electric_bike\", \"electric_bike\", \"electric_bike\", …\n$ started_at         <dttm> 2024-01-22 19:43:19, 2024-01-11 20:19:18, 2024-01-…\n$ ended_at           <dttm> 2024-01-22 19:48:10, 2024-01-11 20:47:36, 2024-01-…\n$ start_station_name <chr> \"Frederick Douglass Blvd & W 145 St\", \"W 54 St & 6 …\n$ start_station_id   <chr> \"7954.12\", \"6771.13\", \"5659.11\", \"6771.13\", \"7443.0…\n$ end_station_name   <chr> \"St Nicholas Ave & W 126 St\", \"E 74 St & 1 Ave\", \"W…\n$ end_station_id     <chr> \"7756.1\", \"6953.08\", \"5847.06\", \"6953.08\", \"6953.08…\n$ start_lat          <dbl> 40.82307, 40.76182, 40.72759, 40.76178, 40.78981, 4…\n$ start_lng          <dbl> -73.94174, -73.97704, -73.97975, -73.97714, -73.952…\n$ end_lat            <dbl> 40.81143, 40.76897, 40.73342, 40.76897, 40.76897, 4…\n$ end_lng            <dbl> -73.95188, -73.95482, -74.00851, -73.95482, -73.954…\n$ member_casual      <chr> \"member\", \"member\", \"casual\", \"member\", \"member\", \"…\n$ duration           <dbl> 4.861600, 28.288100, 15.136067, 10.990900, 13.75260…\n$ month              <ord> Jan, Jan, Jan, Jan, Jan, Jan, Jan, Jan, Jan, Jan, J…\n$ day_of_week        <ord> Mo, Do, Di, Sa, Di, Fr, Di, Mi, Mo, Do, Mi, Mi, Di,…\n$ season             <chr> \"Winter\", \"Winter\", \"Winter\", \"Winter\", \"Winter\", \"…\n```\n\n\n:::\n\n```{.r .cell-code}\n# Descriptive Statistics for Trip Duration\nsummary(citibike_data_cleaned$duration)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n -57.981    5.238    9.067   13.501   15.781 1559.931 \n```\n\n\n:::\n:::\n\n\n\n### Number of trips by season of the year\n\nIn this section, the number of trips made in the bicycle system by season of the year is analyzed. The 'season' variable is transformed into a factor with the correct order of the seasons (Spring, Summer, Autumn, Winter) and then the number of trips for each season is counted using `count()`. The results are visualized in a bar chart (`geom_col()`), with the X-axis representing the seasons and the Y-axis the number of trips.\n\nThe bar chart clearly shows the distribution of bicycle trips across the four seasons. It is evident that **Summer has the highest number of bicycle trips**, followed by Autumn and then Spring. **Winter has the lowest number of trips** by a significant margin compared to the other seasons. This pattern is expected, as warmer weather and longer daylight hours in Summer and Autumn are generally more conducive to cycling than the colder, shorter days of Winter and early Spring.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncitibike_data_cleaned %>%\n  mutate(season = factor(season, levels = c(\"Spring\", \"Summer\", \"Fall\", \"Winter\"))) %>%\n  count(season) %>%\n  ggplot(aes(x = season, y = n, fill = season)) +\n  geom_col() +\n  labs(title = \"Number of Trips by Season\", x = \"Season\", y = \"Number of Trips\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](QuartoProject_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n### Distribution of trips by user type\n\nIn this section, the distribution of trips by user type is analyzed, differentiating between registered members and occasional users (member_casual). The number of trips made by each user type is counted using `count()`, and the results are visualized using a bar chart (`geom_col()`), with the X-axis representing the user types and the Y-axis the number of trips made. This allows observing how trips are distributed between frequent and sporadic users.\n\nThe bar chart illustrates the distribution of trips between casual and member users. It shows that the **number of trips made by member users is significantly higher** than the number of trips made by casual users. This indicates that registered members constitute the majority of users utilizing the bicycle system for trips.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncitibike_data_cleaned %>%\n  count(member_casual) %>%\n  ggplot(aes(x = member_casual, y = n, fill = member_casual)) +\n  geom_col() +\n  labs(title = \"Distribution of Trips by User Type\", x = \"User Type\", y = \"Number of Trips\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](QuartoProject_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n### Average trip duration by user type\n\nIn this analysis, the average duration of trips is evaluated based on the user type, differentiating between registered members and occasional users (member_casual). The average trip duration is calculated grouped by user type and then visualized using a bar chart. The chart allows observing the differences in trip duration between frequent and sporadic users, which can be useful for understanding the usage patterns of the bicycle system.\n\nThe accompanying bar chart visually represents the average trip duration for casual versus member users. It clearly shows that **casual users have a significantly longer average trip duration** compared to member users. The bar for casual users is considerably taller, indicating their trips tend to last for more minutes on average than those taken by registered members. This suggests that casual users might use the bikes for longer recreational rides or one-off journeys, while members may use them more frequently for shorter commutes or regular trips.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncitibike_data_cleaned %>%\n  group_by(member_casual) %>%\n  summarise(avg_duration = mean(duration, na.rm = TRUE)) %>%\n  ggplot(aes(x = member_casual, y = avg_duration, fill = member_casual)) +\n  geom_col() +\n  labs(title = \"Average Trip Duration by User Type\", x = \"User Type\", y = \"Average Duration (minutes)\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](QuartoProject_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n### Analysis of bike type\n\nIn this analysis, the number of trips is analyzed based on the type of bicycle. The code groups the data by bike type, counts the number of trips for each type, and then creates a bar chart to visualize these counts.\n\nTbe chart shows the distribution of trips between different bicycle types. From the chart, it is evident that **electric bikes are used for a significantly higher number of trips** compared to classic bikes. The bar representing electric bikes is substantially taller than the bar for classic bikes, indicating a strong preference for, or greater availability/usage of, electric bicycles within the system.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\n\n# Group by bike type and count\nbike_type_count <- citibike_data_cleaned %>%\n  filter(!is.na(rideable_type)) %>%\n  count(rideable_type, sort = TRUE)\n\nggplot(bike_type_count, aes(x = reorder(rideable_type, n), y = n, fill = rideable_type)) +\n  geom_col() +\n  labs(title = \"Analysis of bike type\", \n       x = \"Bike type\", \n       y = \"Number of trips\") + \n  theme_minimal() + \n  scale_fill_viridis_d()\n```\n\n::: {.cell-output-display}\n![](QuartoProject_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n## Detailed Temporal Analysis\n\n\n### Monthly Trend of Trips\n\nThe line graph illustrates a clear seasonal pattern in the number of Citi Bike trips for both casual and member users over the observed year. Both user types show a significant increase in ridership starting from the low point in January, peaking during the warmer months (approximately July through October), and then declining sharply towards the following January. Member users consistently account for a substantially higher number of trips each month compared to casual users, reinforcing their role as the primary users of the system. The peak in member trips is considerably higher than the peak for casual users, and the magnitude of monthly fluctuation appears more pronounced for members. This suggests that while both groups are influenced by seasonal factors, registered members utilize the service much more extensively throughout the year, particularly during favorable weather conditions.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(lubridate)\n\n# Group by month and user type\nmonthly_trips <- citibike_data_cleaned %>%\n  mutate(month = floor_date(started_at, \"month\")) %>%\n  group_by(month, member_casual) %>%\n  summarise(total_trips = n(), .groups = \"drop\")\n\n# Plot\nggplot(monthly_trips, aes(x = month, y = total_trips, color = member_casual)) +\n  geom_line(size = 1.2) +\n  labs(\n    title = \"Monthly trend of trips in Citi Bike\",\n    x = \"Month\",\n    y = \"Number of trips\",\n    color = \"User type\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](QuartoProject_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n### Trips by Day of the Week\n\nThe bar chart illustrating trips by day of the week reveals distinct usage patterns between member and casual users. Member users consistently show a higher volume of trips throughout the week, with peak ridership occurring on weekdays from Monday to Friday. Their trip numbers see a noticeable decrease during the weekend (Saturday and Sunday). This pattern strongly suggests that members primarily utilize the bike-sharing service for regular weekday activities, likely commuting or running errands.\n\nIn contrast, casual users exhibit the opposite trend, with lower trip numbers during the weekdays and a significant surge in ridership over the weekend, peaking on Saturday. This pattern indicates that casual users are more inclined to use the bikes for leisure activities, recreation, or tourism, which are typically pursued during days off. The clear divergence in weekday vs. weekend usage between the two user types highlights their different motivations and use cases for the bike-sharing system.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Extract weekday\ncitibike_data_cleaned <- citibike_data_cleaned %>%\n  mutate(weekday = wday(started_at, label = TRUE, week_start = 1))\n\n# Group\nweekday_trips <- citibike_data_cleaned %>%\n  group_by(weekday, member_casual) %>%\n  summarise(total_trips = n(), .groups = \"drop\")\n\n# Plot\nggplot(weekday_trips, aes(x = weekday, y = total_trips, fill = member_casual)) +\n  geom_col(position = \"dodge\") +\n  labs(\n    title = \"Trips by Day of the Week\",\n    x = \"Day\",\n    y = \"Number of trips\",\n    fill = \"User type\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](QuartoProject_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n### Hourly Distribution of Trips\n\nThe bar chart displaying the hourly distribution of trips reveals distinct daily usage patterns between member and casual users. Member users exhibit a clear bimodal distribution, with significant peaks in ridership during typical morning commute hours (around 8-9 AM) and evening commute hours (around 5-6 PM). This pattern is characteristic of individuals using the bike service for regular daily travel, such as commuting to and from work or school.\n\nIn contrast, casual users show a more spread-out distribution throughout the day, with their ridership gradually increasing from the morning, peaking over a broader period in the afternoon and early evening (roughly 12 PM to 6 PM), and then declining. They do not display the sharp, distinct commute-hour peaks seen among members. This suggests that casual users utilize the bikes for a wider variety of activities throughout the day, likely including leisure rides, sightseeing, or running errands, rather than primarily for fixed-time commuting. Both user types have minimal activity during the late night and early morning hours. The difference in hourly patterns underscores the primary use cases for each user segment - routine transportation for members and more flexible, activity-based use for casual riders.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Extract start hour\ncitibike_data_cleaned <- citibike_data_cleaned %>%\n  mutate(hour = hour(started_at))\n\n# Plot\nggplot(citibike_data_cleaned, aes(x = hour, fill = member_casual)) +\n  geom_histogram(binwidth = 1, position = \"dodge\", color = \"black\") +\n  scale_x_continuous(breaks = 0:23) +\n  labs(\n    title = \"Hourly distribution of trips\",\n    x = \"Hour of the day\",\n    y = \"Number of trips\",\n    fill = \"User type\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](QuartoProject_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n### Average duration by season of the year\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\n\ncitibike_data_cleaned %>%\n  group_by(season) %>%\n  summarise(avg_duration = mean(duration, na.rm = TRUE)) %>%\n  mutate(season = factor(season, levels = c(\"Spring\", \"Summer\", \"Fall\", \"Winter\"))) %>%\n  ggplot(aes(x = season, y = avg_duration, fill = season)) +\n  geom_col() +\n  labs(title = \"Average duration by season of the year\", y = \"Duration (minutes)\")\n```\n\n::: {.cell-output-display}\n![](QuartoProject_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n### Duración media del viaje por tipo de bicicleta\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\n\n# Calcular la duración media por tipo de bicicleta\nbike_type_duration <- citibike_data_cleaned %>%\n  group_by(rideable_type) %>%\n  summarise(avg_duration = mean(duration, na.rm = TRUE))\n\n# Crear la gráfica\nggplot(bike_type_duration, aes(x = rideable_type, y = avg_duration, fill = rideable_type)) +\n  geom_col() +\n  labs(title = \"Duración promedio por tipo de bicicleta\", x = \"Tipo de bicicleta\", y = \"Duración promedio (minutos)\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](QuartoProject_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n## Análisis Espacial de los Viajes\n\n### Densidad de Viajes por Estación\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\ninstall.packages(\"viridis\")   # Solo la primera vez\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nInstalliere Paket nach 'C:/Users/User/AppData/Local/R/win-library/4.4'\n(da 'lib' nicht spezifiziert)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nPaket 'viridis' erfolgreich ausgepackt und MD5 Summen abgeglichen\n\nDie heruntergeladenen Binärpakete sind in \n\tC:\\Users\\User\\AppData\\Local\\Temp\\RtmpcfUAjP\\downloaded_packages\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(viridis)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Paket 'viridis' wurde unter R Version 4.4.3 erstellt\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLade nötiges Paket: viridisLite\n```\n\n\n:::\n\n```{.r .cell-code}\n# Agrupar por estaciones de inicio\nstation_density <- citibike_data_cleaned %>%\n  group_by(start_station_name, start_lat, start_lng) %>%\n  summarise(total_trips = n(), .groups = \"drop\")\n\n# Crear el mapa de densidad de estaciones de inicio\nggplot(station_density, aes(x = start_lng, y = start_lat)) +\n  geom_point(aes(size = total_trips, color = total_trips), alpha = 0.7) +\n  scale_color_viridis() +\n  scale_size_continuous(range = c(1, 10)) +\n  labs(title = \"Densidad de viajes por estación de inicio\", x = \"Longitud\", y = \"Latitud\", size = \"Total de viajes\", color = \"Total de viajes\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](QuartoProject_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n### Análisis de Viajes Más Frecuentes: Estaciones de Origen y Destino\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\n\n# Top 10 estaciones de origen más frecuentes\ntop_start_stations <- citibike_data_cleaned %>%\n  filter(!is.na(start_station_name)) %>%\n  count(start_station_name, sort = TRUE) %>%\n  slice_max(n, n = 10)\n\n# Gráfica de estaciones de origen\nggplot(top_start_stations, aes(x = reorder(start_station_name, n), y = n, fill = start_station_name)) +\n  geom_col(show.legend = FALSE) +\n  coord_flip() +\n  labs(title = \"Top 10 estaciones de origen\",\n       x = \"Estación de inicio\",\n       y = \"Número de viajes\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](QuartoProject_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Top 10 estaciones de destino más frecuentes\ntop_end_stations <- citibike_data_cleaned %>%\n  filter(!is.na(end_station_name)) %>%\n  count(end_station_name, sort = TRUE) %>%\n  slice_max(n, n = 10)\n\n# Gráfica de estaciones de destino\nggplot(top_end_stations, aes(x = reorder(end_station_name, n), y = n, fill = end_station_name)) +\n  geom_col(show.legend = FALSE) +\n  coord_flip() +\n  labs(title = \"Top 10 estaciones de destino\",\n       x = \"Estación de destino\",\n       y = \"Número de viajes\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](QuartoProject_files/figure-html/unnamed-chunk-16-2.png){width=672}\n:::\n:::\n",
    "supporting": [
      "QuartoProject_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}